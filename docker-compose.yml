version: "3.8"
services:
  backend:
    build: ./backend
    container_name: golang_backend
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=docker
      - DB_PASSWORD=docker
      - DB_NAME=pg-test

  frontend:
    build: ./frontend
    container_name: react_frontend
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      - backend

  db:
    container_name: pg_server
    image: postgres:14.3
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    volumes:
      - ./sql/initdb.sql:/docker-entrypoint-initdb.d/init.sql

      - D:/pgdbdata:/var/lib/postgresql/data #指定到你想掛載的位置
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U docker"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4:6.9
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-user@domain.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-docker}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_SERVER_JSON_FILE: "/config/pgdb_servers.json"
    volumes:
      - ./pgadmin:/config
    ports:
      - "5431:80"
    restart: always

volumes:
  postgres_data:

networks:
  mynet:
    name: mynet
    enable_ipv6: false
    ipam:
      config:
        - subnet: 0.0.0.0/0
